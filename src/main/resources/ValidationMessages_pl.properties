javax.validation.constraints.AssertFalse.message = Musi by\u0107 fa\u0142szem
javax.validation.constraints.AssertTrue.message = Musi by\u0107 prawd\u0105
javax.validation.constraints.DecimalMax.message = Musi by\u0107 mniejsze ${inclusive \=\= true ? 'lub r\u00F3wne od ' \: ''}{value}
javax.validation.constraints.DecimalMin.message = Musi by\u0107 wi\u0119ksze ${inclusive \=\= true ? 'lub r\u00F3wne od ' \: ''}{value}
javax.validation.constraints.Digits.message = Niepoprawna warto\u015B\u0107 numeryczna (oczekiwano <{integer} digits>.<{fraction} digits>)
javax.validation.constraints.Future.message = Musi by\u0107 przysz\u0142\u0105 dat\u0105
javax.validation.constraints.FutureOrPresent.message = Musi by\u0107 aktualn\u0105 lub przysz\u0142\u0105 dat\u0105
javax.validation.constraints.Max.message = Musi by\u0107 mniejsze lub r\u00F3wne od {value}
javax.validation.constraints.Min.message = Musi by\u0107 wi\u0119ksze lub r\u00F3wne od {value}
javax.validation.constraints.Negative.message = Musi by\u0107 mniejsze od zero
javax.validation.constraints.NegativeOrZero.message = Musi by\u0107 mniejsze lub r\u00F3wne zero
javax.validation.constraints.NotBlank.message = Musi posiada\u0107 zawarto\u015B\u0107
javax.validation.constraints.NotEmpty.message = Nie mo\u017Ce by\u0107 puste
javax.validation.constraints.NotNull.message = Musi zosta\u0107 ustawione
javax.validation.constraints.Null.message = Musi pozosta\u0107 nieustawione
javax.validation.constraints.Past.message = Musi by\u0107 przesz\u0142\u0105 dat\u0105
javax.validation.constraints.PastOrPresent.message = Musi by\u0107 aktualn\u0105 lub przesz\u0142\u0105 dat\u0105
javax.validation.constraints.Pattern.message = Musi by\u0107 zgodne z wyra\u017Ceniem regularnym "{regexp}"
javax.validation.constraints.Positive.message = Musi by\u0107 wi\u0119ksze od zero
javax.validation.constraints.PositiveOrZero.message = Musi by\u0107 wi\u0119ksze lub r\u00F3wne zero
javax.validation.constraints.Size.message = Musi mie\u0107 d\u0142ugo\u015B\u0107 pomi\u0119dzy {min} a {max}
javax.validation.constraints.Email.message = Musi by\u0107 poprawnym adresem email

org.hibernate.validator.constraints.CreditCardNumber.message = Nieprawid\u0142owy numer karty kredytowej
org.hibernate.validator.constraints.Currency.message = Nieprawid\u0142owa waluta (musi by\u0107 jedn\u0105 z {value})
org.hibernate.validator.constraints.EAN.message = Nieprawid\u0142owy kod kreskowy {type}
org.hibernate.validator.constraints.Email.message = Musi by\u0107 poprawnym adresem email
org.hibernate.validator.constraints.ISBN.message = Nieprawid\u0142owy ISBN
org.hibernate.validator.constraints.Length.message = Musi mie\u0107 d\u0142ugo\u015B\u0107 pomi\u0119dzy {min} a {max} znak\u00F3w
org.hibernate.validator.constraints.CodePointLength.message = Musi mie\u0107 d\u0142ugo\u015B\u0107 pomi\u0119dzy {min} a {max}
org.hibernate.validator.constraints.LuhnCheck.message = Niepoprawna liczba ${validatedValue}, nieprawid\u0142owa suma kontrolna Luhn Modulo 10
org.hibernate.validator.constraints.Mod10Check.message = Niepoprawna liczba ${validatedValue}, nieprawid\u0142owa suma kontrolna Modulo 10
org.hibernate.validator.constraints.Mod11Check.message = Niepoprawna liczba ${validatedValue}, nieprawid\u0142owa suma kontrolna Modulo 11
org.hibernate.validator.constraints.ModCheck.message = Niepoprawna liczba ${validatedValue}, nieprawid\u0142owa suma kontrolna ${modType}
org.hibernate.validator.constraints.NotBlank.message = Musi posiada\u0107 zawarto\u015B\u0107
org.hibernate.validator.constraints.NotEmpty.message = Nie mo\u017Ce by\u0107 puste
org.hibernate.validator.constraints.ParametersScriptAssert.message = Wyra\u017Cenie skryptowe "{script}" nie zwr\u00F3ci\u0142o true
org.hibernate.validator.constraints.Range.message = Musi by\u0107 pomi\u0119dzy {min} a {max}
org.hibernate.validator.constraints.SafeHtml.message = Mo\u017Ce zawiera\u0107 niezabezpieczony kod HTML
org.hibernate.validator.constraints.ScriptAssert.message = Wyra\u017Cenie skryptowe "{script}" nie zwr\u00F3ci\u0142o poprawnej warto\u015Bci
org.hibernate.validator.constraints.UniqueElements.message = Musi zawiera\u0107 wy\u0142\u0105cznie unikalne elementy
org.hibernate.validator.constraints.URL.message = Musi by\u0107 poprawnym adresem URL

org.hibernate.validator.constraints.br.CNPJ.message = Niepoprwany numer CNPJ
org.hibernate.validator.constraints.br.CPF.message = Niepoprwny numer CPF
org.hibernate.validator.constraints.br.TituloEleitoral.message = Niepoprawny numer Voter ID

org.hibernate.validator.constraints.pl.REGON.message = Nieprawid\u0142owy REGON
org.hibernate.validator.constraints.pl.NIP.message = Nieprawid\u0142owy NIP
org.hibernate.validator.constraints.pl.PESEL.message = Nieprawid\u0142owy PESEL

org.hibernate.validator.constraints.time.DurationMax.message = Musi by\u0107 kr\u00F3tszy ni\u017C ${inclusive \=\= true ? ' lub r\u00F3wny' \: ''}${days \=\= 0 ? '' \: days \=\= 1 ? ' 1 dzie\u0144' \: ' ' +\= days +\= ' dni'}${hours \=\= 0 ? '' \: hours \=\= 1 ? ' 1 godzina' \: ' ' +\= hours +\= ' godzin'}${minutes \=\= 0 ? '' \: minutes \=\= 1 ? ' 1 minuta' \: ' ' +\= minutes +\= ' minut'}${seconds \=\= 0 ? '' \: seconds \=\= 1 ? ' 1 sekunda' \: ' ' +\= seconds +\= ' sekund'}${millis \=\= 0 ? '' \: millis \=\= 1 ? ' 1 milisekunda' \: ' ' +\= millis +\= ' milisekund'}${nanos \=\= 0 ? '' \: nanos \=\= 1 ? ' 1 nanosekunda' \: ' ' +\= nanos +\= ' nanosekund'}
org.hibernate.validator.constraints.time.DurationMin.message = Musi by\u0107 d\u0142u\u017Cszy ni\u017C ${inclusive \=\= true ? ' lub r\u00F3wny' \: ''}${days \=\= 0 ? '' \: days \=\= 1 ? ' 1 dzie\u0144' \: ' ' +\= days +\= ' dni'}${hours \=\= 0 ? '' \: hours \=\= 1 ? ' 1 godzina' \: ' ' +\= hours +\= ' godzin'}${minutes \=\= 0 ? '' \: minutes \=\= 1 ? ' 1 minuta' \: ' ' +\= minutes +\= ' minut'}${seconds \=\= 0 ? '' \: seconds \=\= 1 ? ' 1 sekunda' \: ' ' +\= seconds +\= ' sekund'}${millis \=\= 0 ? '' \: millis \=\= 1 ? ' 1 milisekunda' \: ' ' +\= millis +\= ' milisekund'}${nanos \=\= 0 ? '' \: nanos \=\= 1 ? ' 1 nanosekunda' \: ' ' +\= nanos +\= ' nanosekund'}
